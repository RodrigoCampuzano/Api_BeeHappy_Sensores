basePath: /api/v1
definitions:
  entities.CalibracionResponse:
    properties:
      factor_calibracion:
        example: 1.5
        type: number
      fecha_calibracion:
        example: "2024-03-20T10:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      id_colmena:
        example: 1
        type: integer
      id_sensor:
        example: 1
        type: integer
      offset_calibracion:
        example: 0.5
        type: number
      valor_maximo:
        example: 30.5
        type: number
      valor_minimo:
        example: 20.5
        type: number
    type: object
  entities.ColmenaRaspberryResponse:
    properties:
      created_at:
        example: "2024-03-20T10:00:00Z"
        type: string
      estado:
        example: activo
        type: string
      id:
        example: 1
        type: integer
      id_colmena:
        example: 1
        type: integer
      id_raspberry:
        example: 1
        type: integer
      updated_at:
        example: "2024-03-20T10:00:00Z"
        type: string
    type: object
  entities.ColmenaResponse:
    properties:
      area_ubicacion:
        example: Sector Norte
        type: string
      estado:
        example: activo
        type: string
      fecha_actualizacion:
        example: "2024-03-20 10:00:00"
        type: string
      fecha_registro:
        example: "2024-03-20 10:00:00"
        type: string
      id:
        example: 1
        type: integer
      identificador:
        example: COL-001
        type: string
      nombre:
        example: Colmena Principal
        type: string
      tipo_colmena:
        example: Langstroth
        type: string
    type: object
  entities.ColmenasListResponse:
    properties:
      colmenas:
        items:
          $ref: '#/definitions/entities.ColmenaResponse'
        type: array
    type: object
  entities.CreateCalibracionRequest:
    properties:
      factor_calibracion:
        example: 1.5
        type: number
      fecha_calibracion:
        example: "2024-03-20T10:00:00Z"
        type: string
      id_colmena:
        example: 1
        type: integer
      id_sensor:
        example: 1
        type: integer
      offset_calibracion:
        example: 0.5
        type: number
      valor_maximo:
        example: 30.5
        type: number
      valor_minimo:
        example: 20.5
        type: number
    type: object
  entities.CreateColmenaRaspberryRequest:
    properties:
      estado:
        enum:
        - activo
        - inactivo
        example: activo
        type: string
      id_colmena:
        example: 1
        type: integer
      id_raspberry:
        example: 1
        type: integer
    required:
    - estado
    type: object
  entities.CreateColmenaRequest:
    properties:
      area_ubicacion:
        example: Sector Norte
        type: string
      estado:
        example: activo
        type: string
      identificador:
        example: COL-001
        type: string
      nombre:
        example: Colmena Principal
        type: string
      tipo_colmena:
        example: Langstroth
        type: string
    type: object
  entities.CreateRaspberryPiRequest:
    properties:
      estado:
        enum:
        - activo
        - inactivo
        example: activo
        type: string
      ip_address:
        example: 192.168.1.100
        type: string
      mac:
        example: "00:11:22:33:44:55"
        type: string
      modelo:
        example: Raspberry Pi 4B
        type: string
      nombre:
        example: Raspberry-001
        type: string
    required:
    - estado
    - ip_address
    - mac
    - modelo
    - nombre
    type: object
  entities.CreateSensorRequest:
    properties:
      direccion_i2c:
        example: "1"
        type: string
      estado:
        enum:
        - activo
        - inactivo
        example: activo
        type: string
      fecha_registro:
        example: "2024-03-20 10:00:00"
        type: string
      id_raspberry:
        example: 1
        type: integer
      id_tipo_sensor:
        example: 1
        type: integer
      pin_conexion:
        example: "1"
        type: string
    required:
    - estado
    type: object
  entities.CreateTipoSensorRequest:
    properties:
      descripcion:
        example: Sensor de temperatura DS18B20
        type: string
      nombre:
        example: DS18B20
        type: string
      tipo_dato:
        example: decimal
        type: string
      unidad_medida:
        example: °C
        type: string
    type: object
  entities.ErrorResponse:
    properties:
      error:
        description: Mensaje de error
        example: Credenciales inválidas. Por favor, verifique su usuario y contraseña
        type: string
    type: object
  entities.RaspberryPiListResponse:
    properties:
      raspberry_pis:
        items:
          $ref: '#/definitions/entities.RaspberryPiResponse'
        type: array
    type: object
  entities.RaspberryPiResponse:
    properties:
      estado:
        example: activo
        type: string
      fecha_registro:
        example: "2024-03-20 10:00:00"
        type: string
      fecha_ultima_conexion:
        example: "2024-03-20 10:00:00"
        type: string
      id:
        example: 1
        type: integer
      ip_address:
        example: 192.168.1.100
        type: string
      mac:
        example: "00:11:22:33:44:55"
        type: string
      modelo:
        example: Raspberry Pi 4B
        type: string
      nombre:
        example: Raspberry-001
        type: string
    type: object
  entities.SensorResponse:
    properties:
      direccion_i2c:
        example: "1"
        type: string
      estado:
        example: activo
        type: string
      fecha_registro:
        example: "2024-03-20 10:00:00"
        type: string
      id:
        example: 1
        type: integer
      id_raspberry:
        example: 1
        type: integer
      id_tipo_sensor:
        example: 1
        type: integer
      pin_conexion:
        example: "1"
        type: string
    type: object
  entities.TipoSensorResponse:
    properties:
      descripcion:
        example: Sensor de temperatura DS18B20
        type: string
      id:
        example: 1
        type: integer
      nombre:
        example: DS18B20
        type: string
      tipo_dato:
        example: decimal
        type: string
      unidad_medida:
        example: °C
        type: string
    type: object
  entities.UpdateCalibracionRequest:
    properties:
      factor_calibracion:
        example: 1.5
        type: number
      fecha_calibracion:
        example: "2024-03-20T10:00:00Z"
        type: string
      id_colmena:
        example: 1
        type: integer
      id_sensor:
        example: 1
        type: integer
      offset_calibracion:
        example: 0.5
        type: number
      valor_maximo:
        example: 30.5
        type: number
      valor_minimo:
        example: 20.5
        type: number
    type: object
  entities.UpdateColmenaRaspberryRequest:
    properties:
      estado:
        enum:
        - activo
        - inactivo
        example: activo
        type: string
      id_colmena:
        example: 1
        type: integer
      id_raspberry:
        example: 1
        type: integer
    required:
    - estado
    type: object
  entities.UpdateColmenaRequest:
    properties:
      area_ubicacion:
        example: Sector Norte
        type: string
      estado:
        example: activo
        type: string
      identificador:
        example: COL-001
        type: string
      nombre:
        example: Colmena Principal
        type: string
      tipo_colmena:
        example: Langstroth
        type: string
    type: object
  entities.UpdateEstadoColmenaRequest:
    properties:
      estado:
        enum:
        - activo
        - inactivo
        example: inactivo
        type: string
    required:
    - estado
    type: object
  entities.UpdateEstadoRaspberryPiRequest:
    properties:
      estado:
        enum:
        - activo
        - inactivo
        example: inactivo
        type: string
    required:
    - estado
    type: object
  entities.UpdateEstadoSensorRequest:
    properties:
      estado:
        enum:
        - activo
        - inactivo
        example: inactivo
        type: string
    required:
    - estado
    type: object
  entities.UpdateRaspberryPiRequest:
    properties:
      estado:
        enum:
        - activo
        - inactivo
        example: activo
        type: string
      ip_address:
        example: 192.168.1.100
        type: string
      macj:
        example: "00:11:22:33:44:55"
        type: string
      modelo:
        example: Raspberry Pi 4B
        type: string
      nombre:
        example: Raspberry-001
        type: string
    required:
    - estado
    - modelo
    type: object
  entities.UpdateSensorRequest:
    properties:
      direccion_i2c:
        example: "1"
        type: string
      estado:
        enum:
        - activo
        - inactivo
        example: activo
        type: string
      id_raspberry:
        example: 1
        type: integer
      id_tipo_sensor:
        example: 1
        type: integer
      pin_conexion:
        example: "1"
        type: string
    required:
    - estado
    type: object
  entities.UpdateTipoSensorRequest:
    properties:
      descripcion:
        example: Sensor de temperatura DS18B20
        type: string
      nombre:
        example: DS18B20
        type: string
      tipo_dato:
        example: decimal
        type: string
      unidad_medida:
        example: °C
        type: string
    type: object
externalDocs:
  description: Autenticación API
  url: http://localhost:8081/swagger/index.html
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API para la gestión de sensores en colmenas
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API de Sensores para Colmenas
  version: "1.0"
paths:
  /calibracion:
    post:
      consumes:
      - application/json
      description: Crea un nuevo registro de calibración para un sensor
      parameters:
      - description: Datos de la calibración
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.CreateCalibracionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.CalibracionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: No autorizado
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Crear una nueva calibración
      tags:
      - Calibración
  /calibracion/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina una calibración por su ID
      parameters:
      - description: ID de la calibración
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Eliminar una calibración
      tags:
      - Calibración
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de una calibración por su ID
      parameters:
      - description: ID de la calibración
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CalibracionResponse'
        "401":
          description: No autorizado
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener una calibración
      tags:
      - Calibración
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una calibración existente
      parameters:
      - description: ID de la calibración
        in: path
        name: id
        required: true
        type: integer
      - description: Datos de actualización
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateCalibracionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CalibracionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Actualizar una calibración
      tags:
      - Calibración
  /colmena:
    get:
      consumes:
      - application/json
      description: Obtiene la lista de todas las colmenas registradas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ColmenasListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener todas las colmenas
      tags:
      - Colmena
    post:
      consumes:
      - application/json
      description: Crea un nuevo registro de colmena
      parameters:
      - description: Datos de la colmena
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.CreateColmenaRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.ColmenaResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Crear una nueva colmena
      tags:
      - Colmena
  /colmena-raspberry:
    post:
      consumes:
      - application/json
      description: Crea una nueva relación entre una colmena y un dispositivo Raspberry
        Pi
      parameters:
      - description: Datos de la relación
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.CreateColmenaRaspberryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.ColmenaRaspberryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Crear una nueva relación colmena-raspberry
      tags:
      - Colmena-Raspberry
  /colmena-raspberry/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina una relación existente entre colmena y Raspberry Pi
      parameters:
      - description: ID de la relación
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Eliminar una relación colmena-raspberry
      tags:
      - Colmena-Raspberry
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de una relación colmena-raspberry por su ID
      parameters:
      - description: ID de la relación
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ColmenaRaspberryResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener relación colmena-raspberry por ID
      tags:
      - Colmena-Raspberry
    put:
      consumes:
      - application/json
      description: Actualiza una relación existente entre colmena y Raspberry Pi
      parameters:
      - description: ID de la relación
        in: path
        name: id
        required: true
        type: integer
      - description: Datos de actualización
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateColmenaRaspberryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ColmenaRaspberryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Actualizar una relación colmena-raspberry
      tags:
      - Colmena-Raspberry
  /colmena/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina una colmena por su ID
      parameters:
      - description: ID de la colmena
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Eliminar una colmena
      tags:
      - Colmena
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de una colmena por su ID
      parameters:
      - description: ID de la colmena
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ColmenaResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener una colmena
      tags:
      - Colmena
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una colmena existente
      parameters:
      - description: ID de la colmena
        in: path
        name: id
        required: true
        type: integer
      - description: Datos de actualización
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateColmenaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ColmenaResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Actualizar una colmena
      tags:
      - Colmena
  /colmena/{id}/estado:
    put:
      consumes:
      - application/json
      description: Actualiza el estado de una colmena existente
      parameters:
      - description: ID de la colmena
        in: path
        name: id
        required: true
        type: integer
      - description: Nuevo estado
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateEstadoColmenaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ColmenaResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Actualizar estado de colmena
      tags:
      - Colmena
  /raspberry:
    get:
      consumes:
      - application/json
      description: Obtiene la lista de todos los dispositivos Raspberry Pi
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.RaspberryPiListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener todos los Raspberry Pi
      tags:
      - RaspberryPi
    post:
      consumes:
      - application/json
      description: Registra un nuevo dispositivo Raspberry Pi en el sistema
      parameters:
      - description: Datos del dispositivo
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.CreateRaspberryPiRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.RaspberryPiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Crear un nuevo Raspberry Pi
      tags:
      - RaspberryPi
  /raspberry/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina un dispositivo Raspberry Pi por su ID
      parameters:
      - description: ID del dispositivo
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Eliminar un Raspberry Pi
      tags:
      - RaspberryPi
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de un dispositivo Raspberry Pi por su ID
      parameters:
      - description: ID del dispositivo
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.RaspberryPiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener un Raspberry Pi
      tags:
      - RaspberryPi
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un dispositivo Raspberry Pi existente
      parameters:
      - description: ID del dispositivo
        in: path
        name: id
        required: true
        type: integer
      - description: Datos de actualización
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateRaspberryPiRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.RaspberryPiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Actualizar un Raspberry Pi
      tags:
      - RaspberryPi
  /raspberry/{id}/estado:
    put:
      consumes:
      - application/json
      description: Actualiza el estado de un dispositivo Raspberry Pi
      parameters:
      - description: ID del dispositivo
        in: path
        name: id
        required: true
        type: integer
      - description: Nuevo estado
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateEstadoRaspberryPiRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.RaspberryPiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Actualizar estado de Raspberry Pi
      tags:
      - RaspberryPi
  /raspberry/mac/{mac}:
    get:
      consumes:
      - application/json
      description: Obtiene un dispositivo Raspberry Pi por su dirección MAC
      parameters:
      - description: Dirección MAC del dispositivo
        in: path
        name: mac
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.RaspberryPiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtener Raspberry Pi por MAC
      tags:
      - RaspberryPi
  /sensores:
    get:
      consumes:
      - application/json
      description: Obtiene todos los sensores registrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.SensorResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obtener todos los sensores
    post:
      consumes:
      - application/json
      description: Crea un nuevo sensor en la base de datos
      parameters:
      - description: Sensor a crear
        in: body
        name: sensor
        required: true
        schema:
          $ref: '#/definitions/entities.CreateSensorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.SensorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Crear un sensor
  /sensores/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina un sensor existente
      parameters:
      - description: ID del sensor
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Eliminar un sensor
    get:
      consumes:
      - application/json
      description: Obtiene un sensor por su ID
      parameters:
      - description: ID del sensor
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.SensorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obtener un sensor
    put:
      consumes:
      - application/json
      description: Actualiza un sensor existente
      parameters:
      - description: ID del sensor
        in: path
        name: id
        required: true
        type: integer
      - description: Sensor a actualizar
        in: body
        name: sensor
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateSensorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.SensorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Actualizar un sensor
  /sensores/{id}/estado:
    put:
      consumes:
      - application/json
      description: Actualiza el estado de un sensor existente
      parameters:
      - description: ID del sensor
        in: path
        name: id
        required: true
        type: integer
      - description: Estado a actualizar
        in: body
        name: estado
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateEstadoSensorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Actualizar el estado de un sensor
  /sensores/raspberry/{id}:
    get:
      consumes:
      - application/json
      description: Obtiene todos los sensores asociados a un Raspberry Pi
      parameters:
      - description: ID del Raspberry Pi
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.SensorResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obtener sensores por Raspberry Pi
  /tipos-sensores:
    get:
      consumes:
      - application/json
      description: Obtiene todos los tipos de sensores de la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Lista de tipos de sensores obtenida exitosamente
          schema:
            items:
              $ref: '#/definitions/entities.TipoSensorResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obtener todos los tipos de sensores
      tags:
      - Tipo Sensores
    post:
      consumes:
      - application/json
      description: Crea un nuevo tipo de sensor en la base de datos
      parameters:
      - description: Tipo de sensor a crear
        in: body
        name: TipoSensor
        required: true
        schema:
          $ref: '#/definitions/entities.CreateTipoSensorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Tipo de sensor creado exitosamente
          schema:
            $ref: '#/definitions/entities.TipoSensorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Crear un nuevo tipo de sensor
      tags:
      - Tipo Sensores
  /tipos-sensores/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina un tipo de sensor existente de la base de datos
      parameters:
      - description: ID del tipo de sensor
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tipo de sensor eliminado exitosamente
          schema:
            $ref: '#/definitions/entities.TipoSensorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Eliminar un tipo de sensor existente
      tags:
      - Tipo Sensores
    get:
      consumes:
      - application/json
      description: Obtiene un tipo de sensor por su ID de la base de datos
      parameters:
      - description: ID del tipo de sensor
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tipo de sensor obtenido exitosamente
          schema:
            $ref: '#/definitions/entities.TipoSensorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obtener un tipo de sensor por su ID
      tags:
      - Tipo Sensores
    put:
      consumes:
      - application/json
      description: Actualiza un tipo de sensor existente en la base de datos
      parameters:
      - description: ID del tipo de sensor
        in: path
        name: id
        required: true
        type: integer
      - description: Tipo de sensor a actualizar
        in: body
        name: TipoSensor
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateTipoSensorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tipo de sensor actualizado exitosamente
          schema:
            $ref: '#/definitions/entities.TipoSensorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Actualizar un tipo de sensor existente
      tags:
      - Tipo Sensores
  /tipos-sensores/nombre/{nombre}:
    get:
      consumes:
      - application/json
      description: Obtiene un tipo de sensor por su nombre de la base de datos
      parameters:
      - description: Nombre del tipo de sensor
        in: path
        name: nombre
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tipo de sensor obtenido exitosamente
          schema:
            $ref: '#/definitions/entities.TipoSensorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obtener un tipo de sensor por su nombre
      tags:
      - Tipo Sensores
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    description: 'Introduce el token Bearer. Ejemplo: "Bearer {token}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
